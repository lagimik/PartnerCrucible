name: ChangeLog

on:
  workflow_dispatch:

jobs:
  scan:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name: Find changed-files
    outputs:
      changes: ${{ steps.file-changes.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - uses: tj-actions/changed-files@v35
        name: Changed Files
        id: changed-files
        with:
            since: "7 days"
            files: |
              *.md
      - name: Get changes in files
        id: file-changes
        run: |

          file_change=""
          json="{\"changes\":["
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
            file_change=$(git log --since="7 days" -p -U0 $file)

            file_change="${file_change//'%'/'%25'}"
            file_change="${file_change//$'\n'/'%0A'}"
            file_change="${file_change//$'\r'/'%0D'}"
            file_change="${file_change//':'/'%3A'}"
            file_change="${file_change//'<'/'%3C'}"
            file_change="${file_change//'>'/'%3E'}"
            file_change="${file_change//'"'/'%22'}"
            file_change="${file_change//'['/'%5B'}"
            file_change="${file_change//']'/'%5D'}"
            file_change="${file_change//'{'/'%7B'}"
            file_change="${file_change//'}'/'%7D'}"
            file_change="${file_change//'\'/'%5C'}"


            json+="{\"file\":\"$file\", \"change\":\"$file_change\"},"
          done
          json+="]}"

          echo "$json"

          echo "changes=$json" >> $GITHUB_OUTPUT

  summary:
    runs-on: ubuntu-latest
    name: summary
    needs: scan
    continue-on-error: true
    outputs:
      completion: ${{ steps.extract-print.outputs.completion }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.scan.outputs.changes) }}
    steps:
      - name: Print Changes
        id: print-changes
        run: |
          echo "${{ matrix.changes.file}}"
          echo "${{ matrix.changes.change}}"

      - name: Create Summary Completion Jobs
        if: ${{ (matrix.changes.change != null)  }}
        uses: austenstone/openai-completion-action@v2
        id: create-summary
        with:
          prompt: |
            "Use an energetic tone summarize the changes found below in the Partner Crucible updates to encourage readers to follow the links."
            "Use an attention grabbing tagline in a heading as the title."
            "include the links as part of the summary."
            "Use markdown as the output format."
            "${{ matrix.changes.change}}"
          max_tokens: 1000
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Extract Completion and Create ChangeLog
        if: ${{ (matrix.changes.change != null) }}
        id: extract-print-summary
        env:
          FILENAME: ${{ matrix.changes.file}}-changelog.md
          SUMMARY: ${{ fromJson(steps.create-summary.outputs.response).choices[0].message.content }}
        run: |
          echo $SUMMARY
          echo $SUMMARY >> $FILENAME

      - name: Create Image Prompt
        id: create-image-prompt
        env:
          FILENAME: ${{ matrix.changes.file}}-changelog.md
        run:
          echo "prompt=an abstract modern urban landscape, without words, inspired by the sentence - `head -c 64 $FILENAME`" >> $GITHUB_OUTPUT

      - name: Generate Image
        id: generate-image
        uses: austenstone/openai-image-generation@main
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          prompt: ${{ steps.create-image-prompt.outputs.prompt }}

      - name: Download Image
        if: ${{ (matrix.changes.change != null) }}
        id: download-image
        env:
          FILENAME: ${{ matrix.changes.file}}-changelog.md
          IMAGE_FILENAME: ${{ matrix.changes.file}}-image.png
          IMAGE_URL: ${{ steps.generate-image.outputs.image }}
          IMAGE_MARKDOWN: '![ ${{ matrix.changes.file}} ]( ${{ matrix.changes.file}}-image.png )'
        run: |
          curl -o $IMAGE_FILENAME $IMAGE_URL
          echo $IMAGE_MARKDOWN >> $FILENAME

      - name: Upload artifact
        id:  upload-artifact
        if: ${{ (matrix.changes.change != null)  }}
        uses: actions/upload-artifact@v3
        with:
          name: completion-segments
          path: "${{ matrix.changes.file}}*.*"

  newsletter:
    runs-on: ubuntu-latest
    name: newsletter
    needs: summary
    
    steps:
      - name: Download and Expand Artifact
        id: download-artifact
        uses: actions/download-artifact@v3
        with:
          name: completion-segments
          path: completion-segments

      - name: List artifacts
        id: list-artifacts
        run: |
          ls -l completion-segments

      - name: Combine Summaries
        id: combine-summaries
        run: |
          cd completion-segments
          for file in *.md; do
            echo $file
            cat $file >> partnercrucible-stream.md
          done

      - name: Upload stream
        id:  upload-stream
        uses: actions/upload-artifact@v3
        with:
          name: partnercrucible-stream
          path: completion-segments/*
    

