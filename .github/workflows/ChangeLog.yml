name: ChangeLog

on:
  workflow_dispatch:

jobs:
  scan:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name: Find changed-files
    outputs:
      changes: ${{ steps.file-changes.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - uses: tj-actions/changed-files@v35
        name: Changed Files
        id: changed-files
        with:
            since: "3 days"
            files: |
              *.md
      - name: Get changes in files
        id: file-changes
        run: |

          file_change=""
          json="{\"changes\":["
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
            file_change=$(git log --since="3 days" -p -U0 $file)

            file_change="${file_change//'%'/'%25'}"
            file_change="${file_change//$'\n'/'%0A'}"
            file_change="${file_change//$'\r'/'%0D'}"
            file_change="${file_change//':'/'%3A'}"
            file_change="${file_change//'<'/'%3C'}"
            file_change="${file_change//'>'/'%3E'}"
            file_change="${file_change//'"'/'%22'}"
            file_change="${file_change//'['/'%5B'}"
            file_change="${file_change//']'/'%5D'}"
            file_change="${file_change//'{'/'%7B'}"
            file_change="${file_change//'}'/'%7D'}"
            file_change="${file_change//'\'/'%5C'}"


            json+="{\"file\":\"$file\", \"change\":\"$file_change\"},"
          done
          json+="]}"

          echo "$json"

          echo "changes=$json" >> $GITHUB_OUTPUT

  summary:
    runs-on: ubuntu-latest
    name: summary
    needs: scan
    outputs:
      completion: ${{ steps.extract-print.outputs.completion }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.scan.outputs.changes) }}
    steps:
      - name: Print Changes
        id: print-changes
        run: |
          echo "${{ matrix.changes.file}}"
          echo "${{ matrix.changes.change}}"

      - name: Create Summary Completion Jobs
        if: ${{ (matrix.changes.change != null)  }}
        uses: austenstone/openai-completion-action@v2
        id: create-summary
        with:
          prompt: |
            "With an energetic tone summarize the url links found below in the git diff output to encourage readers to follow the links."
            "Use an attention grabbing tagline as the title."
            " Use markdown as the output format."
            "${{ matrix.changes.change}}"
          max_tokens: 1000
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Extract and Print Summary Completion
        if: ${{ (matrix.changes.change != null) }}
        id: extract-print-summary
        uses: actions/github-script@v6
        env:
          OPENAI_RESPONSE: ${{ steps.create-summary.outputs.response }}
        with:
          debug: true
          script: |
            const completion  = JSON.parse($OPENAI_RESPONSE)
            console.log(JSON.parse(completion.choices[0].message.content)
            return (completion.choices[0].message.content)

      - name: Create Changelog
        if: ${{ (matrix.changes.change != null)  }}
        id: create-changelog
        env:
          FILENAME: "${{ matrix.changes.file}}-changelog.md"
          SUMMARY: "${{ steps.extract-print-summary.outputs.result }}"
        run: |
          echo $SUMMARY >> $FILENAME


      - name: Upload artifact
        id:  upload-artifact
        if: ${{ (matrix.changes.change != null)  }}
        uses: actions/upload-artifact@v3
        with:
          name: change-summary
          path: "${{ matrix.changes.file}}-changelog.md"


